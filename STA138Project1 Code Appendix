data <- read.csv("C:/Users/Lam/Desktop/STA138/Trial.csv")
library(PropCIs)
library(epitools)
library(MASS) 
attach(data)

n=c(86,26,83,27,45,27,45,28)
group=gl(2,2,labels=c("A","B"))
year=gl(2,4,labels=c("One","Two"))
outcome=gl(2,1,labels=c("Success","Failure"))
d=data.frame(year,group,outcome,n)
d$group <- ordered(d$group, levels=c("A", "B"))
d$year <- ordered(d$year, levels=c("One", "Two"))
d$outcome <- ordered(d$outcome, levels=c("Success", "Failure"))

m=matrix(c(86,26,83,27,45,27,45,28),nrow=2,ncol=4,byrow=TRUE)
dimnames(m)=list(Success=c("No","Yes"),Group=c("A","B"),Year=c("One","Two"))
mosaicplot((d))
zee.table = table(Success,Group) 
zee.table
sample.size = colSums(zee.table) #sums the rows of the table
Success.size=c(zee.table[2,])
prop.test(zee.table,correct = F,alternative = "two.sided",conf.level = 0.95)
prop.test(Success.size,sample.size,alternative = "two.sided",conf.level = 0.95)      

X=oddsratio(zee.table,method="wald",conf.level=0.95)
X$measure[2,] #CI for odds ratio
Y = riskratio(zee.table,rev = "columns",method = "wald", conf.level = 0.95)
Y$measure[2,] #CI for RR

table(data$Group, data$Success)
split.data = split(data, data$Year)
sub.table1 = table(split.data$One$Group, split.data$One$Success)
sub.table2 = table(split.data$Two$Group, split.data$Two$Success)
#For this dataset, you should consider the following your goals:
success.A=(sum(data$Success=="Yes" & data$Group=="A"))/sum(data$Group=="A")
success.B=(sum(data$Success=="Yes" & data$Group=="B"))/sum(data$Group=="B")
success.year.One=(sum(data$Success=="Yes" & data$Year=="One"))/sum(data$Year=="One")
success.year.Two=(sum(data$Success=="Yes" & data$Year=="Two"))/sum(data$Year=="Two")
relative.risk.group=success.A/success.B
relative.risk.year=success.year.One/success.year.Two

#1.1
#CI for probability of a successful treatment overall
success.overall=(sum(Success=="Yes"))/length(Success)
n=length(Success)
error=sqrt((success.overall*(1-success.overall))/n)
success.overall.CI=c(success.overall-error*qnorm(0.975),success.overall+error*qnorm(0.975))

#1.2
Groups.ztable = table(Success,Group) #comparing only groups
Group.sample.size = colSums(Groups.ztable) #sums the rows of the table
Group.Success.size=c(Groups.ztable[2,])
#proportion test for groups
prop.test(Group.Success.size,Group.sample.size,alternative = "two.sided",conf.level = 0.95)
Group.OR=oddsratio(Groups.ztable,method="wald",conf.level=0.95)
Group.OR$measure[2,] #CI for odds ratio
Group.RR= riskratio(Groups.ztable,rev = "columns",method = "wald", conf.level = 0.95)
Group.RR$measure[2,] #CI for RR

library(MASS) #Load a library with a dataset.
head(quine)
zee.table = table(quine$Eth,quine$Sex)
library(epitools)
oddsratio.wald(zee.table,conf.level=0.95)
#1.3

Years.ztable = table(Success,Year) #comparing only groups
Years.sample.size = colSums(Years.ztable) #sums the rows of the table
Years.Success.size=c(Years.ztable[2,])
 #proportion test for groups
prop.test(Years.Success.size,Years.sample.size,alternative = "two.sided",conf.level = 0.95) 
Years.OR=oddsratio(Years.ztable,method="wald",conf.level=0.95)
Years.OR$measure[2,] #CI for odds ratio
Years.RR= riskratio(Years.ztable,rev = "columns",method = "wald", conf.level = 0.95)
Years.RR$measure[2,] #CI for RR
FALSE
#1.4
#With Years
pearson.test=chisq.test(data[,1],data[,2],correct = FALSE)
pearson.test$expected
pearson.test$residuals
pearson.test$stdres

#With Years
pearson.test=chisq.test(data[which(data$Year=="One"),1],data[which(data$Year=="One"),2],correct = FALSE)
pearson.test$expected
pearson.test$residuals
pearson.test$stdres
pearson.test=chisq.test(data[which(data$Year=="Two"),1],data[which(data$Year=="Two"),2],correct = FALSE)
pearson.test$expected
pearson.test$residuals
pearson.test$stdres

data <- read.csv("C:/Users/Lam/Desktop/STA138/comopare.csv")
names(data)
attach(data)
library(Deducer)
library(rJava)
pearson.test=chisq.test(sport,injury,correct = FALSE) 
#dependent
pearson.test$residuals
pearson.test$stdres

x=matrix(c(82,65,26,59,52,56),byrow=TRUE,nrow=2)
rownames(x)=c("Drug","Control")
colnames(x)=c("full","mod","no")
mosaicplot(x)
chisq.test(x)
chisq.test(x)$resid #df=(r-1)*(c-1)
chisq.test(x)$stdres
#h0:groups and outcomes are indep
#HA:they are dependent
#h0:pi ij=pii+ * pi+j
#hA: piij != "      "
#residuals eij=nij-muij/sqrt(muij)
# if abs(std res) >3 then that is causing dependency 

n=rowSums(x)
p1=x[1,]/n[1]
p2=x[2,]/n[2]

#if prop is the same => they are indep so do 3 times
#prop diff , if pi=pio then indep
# OR =1 then indep
#RR =1 then indep
#then construct CI, if has 0 then group info does not play effec then indep

g=3
z.a=qnorm(1-0.05/g)
(p1-p2) - z.a*sqrt(p1*(1-p1)/n[1]+p2*(1-p2)/n[2])
(p1-p2) + z.a*sqrt(p1*(1-p1)/n[1]+p2*(1-p2)/n[2])

#######
######
alpha=0.05
g=3
prop.test(x[,1],rowSums(x),correct=FALSE,conf.level = 1-alpha/g)
prop.test(x[,1],rowSums(x),correct=FALSE,conf.level = 1-alpha/g)$conf.interval
prop.test(x[,2],rowSums(x),correct=FALSE,conf.level = 1-alpha/g)
prop.test(x[,3],rowSums(x),correct=FALSE,conf.level = 1-alpha/g)

#oR
t1=rbind(x[,1],rowsum(x[,c(1,3)]))
#conf.level=1-alpha/g  then find peasure and p.value and RR

Group.ztable = table(Success,Group) #comparing only groups
Group.sample.size = colSums(Group.ztable) #sums the rows of the table
Group.Success.size=c(Group.ztable[2,])
#proportion test for groups
prop.test(Group.Success.size,Group.sample.size,alternative = "two.sided",conf.level = 0.95) 
Group.OR=oddsratio(Group.ztable,method="wald",conf.level=0.95)
Group.OR$measure[2,] #CI for odds ratio
Group.RR= riskratio(Years.ztable,rev = "columns",method = "wald", conf.level = 0.95)
Group.RR$measure[2,] #CI for RR
