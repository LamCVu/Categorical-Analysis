library(PropCIs)
library(epitools)
library(MASS) 
library(vcd)
#Problem 1
data1 <- read.csv("C:/Users/Lam/Desktop/STA138/Trial.csv")
zeee=table(data1)
#Making mosaicplot
n=c(26,86,27,83,27,45,28,45)
nn=array(n,dim=c(2,2,2))
dimnames(nn)=list(Success=c("No","Yes"),Group=c("A","B"),Year=c("One","Two"))
mosaicplot(nn,main="Mosaic Plot:Treatment") 
#probability of a successful treatment overall
success.overall=sum(data1$Success=="Yes")/length(data1$Success)
#The estimate of probability of a successful treatment, comparing group A
success.A=(sum(data1$Success=="Yes" & data1$Group=="A"))/sum(data1$Group=="A")
#The estimate of probability of a successful treatment, comparing group B
success.B=(sum(data1$Success=="Yes" &data1$Group=="B"))/sum(data1$Group=="B")
#The estimate of probability of a successful treatment, comparing year ONE
success.year.One=(sum(data1$Success=="Yes" & data1$Year=="One"))/sum(data1$Year=="One")
#The estimate of probability of a successful treatment, comparing year TWO
success.year.Two=(sum(data1$Success=="Yes" & data1$Year=="Two"))/sum(data1$Year=="Two")
success.A
#Finding relationship between Group and Success without years
pearson.test=chisq.test(data1[,1],data1[,2],correct = FALSE)
pearson.test$residuals
pearson.test$stdres
#Proportion test for groups
Group.ztable = table(data1$Success,data1$Group) #comparing only groups
Group.sample.size = colSums(Group.ztable) 
Group.Success.size=c(Group.ztable[2,])
prop.test(Group.Success.size,Group.sample.size,alternative = "two.sided",conf.level = 0.95)
#Odds Ratio w/o year
Group.OR=oddsratio.wald(Group.ztable,conf.level=0.95)
Group.OR$measure[2,] #CI for odds ratio
#Proportion test for groups with information of years
Year.ztable = table(data1$Success,data1$Year) 
Years.sample.size = colSums(Year.ztable) #sums the rows of the table
Years.Success.size=c(Year.ztable[2,])
prop.test(Years.Success.size,Years.sample.size,alternative = "two.sided",conf.level = 0.95) 
#Odds Ratio w/ year
Years.OR=oddsratio.wald(Year.ztable,conf.level=0.95)
Years.OR$measure[2,] 
#Pearson Test for Indep with year for year ONE
pearson.test=chisq.test(data1[which(data1$Year=="One"),1],data1[which(data1$Year=="One"),2],correct = FALSE)
pearson.test$residuals
pearson.test$stdres
#Pearson Test for Indep with year for year TWO
pearson.test=chisq.test(data1[which(data1$Year=="Two"),1],data1[which(data1$Year=="Two"),2],correct = FALSE)
pearson.test 
pearson.test$residuals
pearson.test$stdres

#Problem 2
data2 <- read.csv("C:/Users/Lam/Desktop/STA138/comopare.csv")
#Mosaic plot 
n=c(38,62,24,35,79,48,110,92)
nn=array(n,dim=c(2,4))
dimnames(nn)=list(Sport=c("Martial","Soccer"),Injury=c("Bone","Concus.","Muscular","None"))
mosaicplot(nn,main="Mosaic Plot: Sport and Injury")
#Pearson Test for Indep between Injury and Sports
pearson.test=chisq.test(data2$sport,data2$injury,correct = FALSE) 
pearson.test
pearson.test$residuals
pearson.test$stdres
#Calculating Relative Risk
t2=table(data2$sport,data2$injury)
t2.size = colSums(t2) #sums the rows of the table
Success.size=c(t2[2,])
prop.test(Success.size,t2.size,alternative = "two.sided",conf.level = 0.95) 
p1=0.6200000
p2=0.5932203
p3=0.3779528
p4=0.4554455
rr12=p1/p2
rr13=p1/p3
rr14=p1/p4
BrokenBone=c(" ",rr12,rr13,rr14)
rr21=p2/p1
rr23=p2/p3
rr24=p2/p4
Concussion=c(rr21," ",rr23,rr24)
rr31=p3/p1
rr32=p3/p2
rr34=p3/p4
Muscular=c(rr31,rr32," ",rr34)
rr41=p4/p1
rr42=p4/p2
rr43=p4/p3
None=c(rr41,rr42,rr43," ")
ddm=rbind(BrokenBone,Concussion,Muscular,None)
dddm=as.data.frame(ddm)
names(dddm)=c("BrokenBone","Concussion","Muscular","None")
#proportion test for each injury
alpha=0.05
g=4
#Broken Bone
prop.test(Group.ztable[,1],Group.sample.size,alternative = "two.sided",conf.level = 1-alpha/g)
#Concussion
prop.test(Group.ztable[,2],Group.sample.size,alternative = "two.sided",conf.level = 1-alpha/g)
#Muscular
prop.test(Group.ztable[,3],Group.sample.size,alternative = "two.sided",conf.level = 1-alpha/g)
#None
prop.test(Group.ztable[,4],Group.sample.size,alternative = "two.sided",conf.level = 1-alpha/g)
#Confidence Interval of proportion difference between variables
g=4
n=rowSums(Group.ztable)
z.a=qnorm(1-0.05/g)
p1=Group.ztable[1,]/n[1]
p2=Group.ztable[2,]/n[2]
(p1-p2) - z.a*sqrt(p1*(1-p1)/n[1]+p2*(1-p2)/n[2])
(p1-p2) + z.a*sqrt(p1*(1-p1)/n[1]+p2*(1-p2)/n[2])
Group.RR$measure[2,] #CI for RR
